{
  "id": "element-counter",
  "inputs": {
    "element": {
      "group": "main"
    }
  },
  "outputs": {
    "count": {
      "group": "main"
    }
  },
  "content": "# element-counter\n\nSDU contract for counting element occurences.\n\n## Synopsis\n\nThe `element-counter` contract can be used to count element occurrences in a given data stream. For a given element,\nit outputs the number of times the element has been seen, starting at 1 for the first occurrence.\nFor example, it could be used to determine element uniqueness by checking its output is always 1.\n\n## Definitions\n\nThe keywords *MUST*, *MUST NOT*, *REQUIRED*, *SHALL*, *SHALL NOT*, *SHOULD*, *SHOULD NOT*, *RECOMMENDED*,  *MAY*, and\n*OPTIONAL* in this document are to be interpreted as described in [RFC 2119](https://tools.ietf.org/html/rfc2119).\n\n*state* refers to the state of a given instance: It contains a mapping of distinct elements, and the number of times\na given element has occured.\n\n## Inputs\n\n### `element`\n\nIn group: `main`\n\nThe element being processed. The string value is taken as-is, without any requirements or processing done.\n\n## Outputs\n\n### `count`\n\nIn group: `main`\n\nThe amount of times a given element has occurred.\n\n## Functionality\n\n### Configuration\n\nA JSON object *MAY* be given as the configuration field when instantiating the contract.  The configuration object\n*MAY* contain a `fixed` property, which in turn is a key-value object. The values `fixed` *MUST* be strings.\n\n### Preconditions\n\nNone.\n\n### Process\n\nFor each value given as `element` do decide:\n\nIf a *configuration* is present, and the value processed is present as a key in `fixed`:\nPut the value associated with the key into `count`.\nThe internal state *MUST NOT* be changed under these circumstances.\n\nOtherwise, if the element is present in *state*, add `1` to the number of occurrences and emit that value in `count`.\nIf the element was not previously present, add it to the *state* with an initial value of 1 and emit that in `count`.\n"
}
