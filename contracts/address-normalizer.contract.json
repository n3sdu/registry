{
  "id": "address-normalizer",
  "content": "# address-normalization\n\nSDU contract for address normalization and plausbilization.\n\n## Synopsis\n\nThe `address-normalizer` contract allows the normalization of a given address to a canonical format.\nBoth western-style street/number/additional styled addresses and generic two-line addresses are supported.\nThe addresses physical existence can be checked.\n\n## Definitions\n\nThe keywords *MUST*, *MUST NOT*, *REQUIRED*, *SHALL*, *SHALL NOT*, *SHOULD*, *SHOULD NOT*, *RECOMMENDED*,  *MAY*, and\n*OPTIONAL* in this document are to be interpreted as described in [RFC 2119](https://tools.ietf.org/html/rfc2119).\n\n## Inputs\n\n### `country`\n\nIn group: `main`\n\nThe address' country or autonomous region.\n*MUST* be given as either an ISO country code, international name or country's own name.\n\n### `state`\n\nIn group: `main`\n\nThe address' state or larger-scale governmental district, if applicable.\n\n### `zip`\n\nIn group: `main`\n\nThe address' ZIP or postal code, if applicable.\n\n### `city`\n\nIn group: `main`\n\nThe address' city or general muncipal region, if applicable.\n\n### `street`\n\nIn group: `main`\n\nThe address' street, if the western address style is used.\n\n### `number`\n\nIn group: `main`\n\nThe address' number, if the western address style is used.\nThe number can include suffixes and is generally not required to be numeric.\n\n### `additional`\n\nIn group: `main`\n\nThe address' additional properties, if the western address style is used.\n\n### `line1`\n\nIn group: `main`\n\nThe address' first line, if generic address style is used.\n\n### `line2`\n\nIn group: `main`\n\nAdditional secondary address line, regardless of the style being used.\n\n## Outputs\n\n### One for every input\n\nIn group: `main`\n\nFor each aforementioned input, there is a corresponding output with the same name in the same group.\nThose will contain the post-normalization and possibly enriched values after being processed\n\n### `canonical`\n\nIn group: `main`\n\nThis output receives the full address in a region-dependent canonical format.\n\n### `fitConfidence`\n\nIn group: `main`\n\nThis output receives a textual representation of the confidence of the correctness of the fit and physical comparison.\nA conforming implementation *MUST* output one of `none`, `low`, `medium`, `high` with the meaning as defined below.\n\n## Functionality\n\n### Configuration\n\nNo configuration is supported.\nA conforming implementation *MAY* support additional configuration and *SHOULD* discard unknown/unused values.\n\n### Preconditions\n\n`country` is non-empty and given in a supported format as defined above.\nAt least one of `line1`, `street`, or `number` is given.\n\n### Process\n\nAll non-empty input fields are being taken into consideration to build an internal representation of the address.\nA conforming implementation *MUST* support any combination of empty and non-empty fields that still conforms to the\npreconditions as defined above.\nIt *SHOULD* give precedence to `line1` over its split pendant if both are given but *MAY* take those fields into\nconsideration for validation purposes.\n\nAn implementation-defined check against physical address locations *SHOULD* be performed, supplementing the internal\nrepresentation in the process.\n\nFrom the given internal state a region-specific canonical format *SHOULD* be determined with fallback to an\nimplementation-defined format.\nThe outputs corresponding to the inputs *MUST* be filled back in from the internal state.\n`country` *MUST* be represented as an ISO country code.\nAn implementation *SHOULD* attempt to fill in `street`, `number`, and `additional` if the generic format was used and\nsuch a representation is applicable for the given region.\n`canonical` *MUST* be filled in according to the determined format with missing parts reperesented as an empty string.\n\nAn implementation-defined heuristic *SHOULD* be used to compare non-empty inputs to the corresponding outputs\nand detect unexpected deviations.\nThe heuristic *SHOULD* take into account semantic equivalence, such as `Germany` and `DE` for `country` or `Musterstr.`\nand `Mustersta√üe` for `street`.\n\nFor `fitConfidence`, output according to the following rules, processing them in order:\n1. `high` if normalization worked, no major deviations were found, and a corresponding physical address exists.\n2. `none` if normalization failed, or the canonical address is missing data.\n3. `low` if major deviations between the non-empty inputs and normalized outputs were detected.\n4. `medium` in every other case.\n",
  "inputs": {
    "country": {
      "group": "main"
    },
    "state": {
      "group": "main"
    },
    "zip": {
      "group": "main"
    },
    "city": {
      "group": "main"
    },
    "street": {
      "group": "main"
    },
    "number": {
      "group": "main"
    },
    "additional": {
      "group": "main"
    },
    "line1": {
      "group": "main"
    },
    "line2": {
      "group": "main"
    }
  },
  "outputs": {
    "country": {
      "group": "main"
    },
    "state": {
      "group": "main"
    },
    "zip": {
      "group": "main"
    },
    "city": {
      "group": "main"
    },
    "street": {
      "group": "main"
    },
    "number": {
      "group": "main"
    },
    "additional": {
      "group": "main"
    },
    "line1": {
      "group": "main"
    },
    "line2": {
      "group": "main"
    },
    "canonical": {
      "group": "main"
    },
    "fitConfidence": {
      "group": "main"
    }
  }
}
